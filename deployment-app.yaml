apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/managed-by":"skaffold-v1.12.0","cc.service.app/instance":"app","cc.service.app/name":"app","cc.service.app/part-of":"app","skaffold.dev/builder":"local","skaffold.dev/cleanup":"true","skaffold.dev/deployer":"kubectl","skaffold.dev/docker-api-version":"1.40","skaffold.dev/run-id":"a25bcc00-03b0-4ffd-a7b4-4bce95dd5801","skaffold.dev/tag-policy":"git-commit"},"name":"app","namespace":"default"},"spec":{"replicas":3,"selector":{"matchLabels":{"cc.service.app/instance":"app","cc.service.app/name":"app"}},"template":{"metadata":{"labels":{"app.kubernetes.io/managed-by":"skaffold-v1.12.0","cc.service.app/instance":"app","cc.service.app/name":"app","skaffold.dev/builder":"local","skaffold.dev/cleanup":"true","skaffold.dev/deployer":"kubectl","skaffold.dev/docker-api-version":"1.40","skaffold.dev/run-id":"a25bcc00-03b0-4ffd-a7b4-4bce95dd5801","skaffold.dev/tag-policy":"git-commit"}},"spec":{"containers":[{"env":[{"name":"MONGODB_SERVICE_HOST","value":"app-database"},{"name":"MONGODB_SERVICE_PORT","value":""}],"image":"dcfranco/cc.service.app:v3.0.3-110-ge9c3c2e-dirty@sha256:cafc89e8e96675949c7b1eda033a7352854c0d281d50d3ad0c4aa8dbf5cd5044","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz","port":"app"},"initialDelaySeconds":10,"periodSeconds":10},"name":"app","ports":[{"containerPort":4000,"name":"app"}],"readinessProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz","port":"app"},"initialDelaySeconds":10,"periodSeconds":10},"resources":{},"startupProbe":{"httpGet":{"path":"/healthz","port":"app"},"initialDelaySeconds":10,"periodSeconds":10}}],"restartPolicy":"Always"}}}}
  creationTimestamp: "2020-07-03T10:50:19Z"
  generation: 1
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.12.0
    cc.service.app/instance: app
    cc.service.app/name: app
    cc.service.app/part-of: app
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kubectl
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: a25bcc00-03b0-4ffd-a7b4-4bce95dd5801
    skaffold.dev/tag-policy: git-commit
  name: app
  namespace: default
  resourceVersion: "1006793"
  selfLink: /apis/apps/v1/namespaces/default/deployments/app
  uid: 99f56a42-131d-4639-b2fc-d21926da5713
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      cc.service.app/instance: app
      cc.service.app/name: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: skaffold-v1.12.0
        cc.service.app/instance: app
        cc.service.app/name: app
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kubectl
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: a25bcc00-03b0-4ffd-a7b4-4bce95dd5801
        skaffold.dev/tag-policy: git-commit
    spec:
      containers:
      - env:
        - name: MONGODB_SERVICE_HOST
          value: app-database
        - name: MONGODB_SERVICE_PORT
        image: dcfranco/cc.service.app:v3.0.3-110-ge9c3c2e-dirty@sha256:cafc89e8e96675949c7b1eda033a7352854c0d281d50d3ad0c4aa8dbf5cd5044
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: app
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: app
        ports:
        - containerPort: 4000
          name: app
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: app
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-07-03T10:50:19Z"
    lastUpdateTime: "2020-07-03T10:51:12Z"
    message: ReplicaSet "app-79486ccbc4" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-07-03T11:00:23Z"
    lastUpdateTime: "2020-07-03T11:00:23Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 1
